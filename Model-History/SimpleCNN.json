"{'AUC': [0.9277651309967041, 0.9764159321784973, 0.9885143041610718, 0.9944689869880676, 0.9976086616516113, 0.9982772469520569, 0.9983962774276733, 0.9984703063964844, 0.9993169903755188, 0.9999004006385803, 0.9994462728500366, 0.9996230006217957, 0.9988799095153809], 'accuracy': [0.7336397171020508, 0.8704311847686768, 0.9122346043586731, 0.9424381852149963, 0.9595097303390503, 0.9752681255340576, 0.9757058620452881, 0.9805209040641785, 0.987305760383606, 0.9949660897254944, 0.9912453293800354, 0.993652880191803, 0.9897133111953735], 'categorical_crossentropy': [0.648449182510376, 0.35408249497413635, 0.24040883779525757, 0.1632496565580368, 0.10144826769828796, 0.06951425969600677, 0.06930327415466309, 0.06482499092817307, 0.03860027715563774, 0.020728163421154022, 0.026183517649769783, 0.023869041353464127, 0.03829554095864296], 'f1_score': [<tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.6926691 , 0.56808937, 0.81323695, 0.81806874], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.8436018 , 0.7467312 , 0.93786174, 0.9283305 ], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.8926014 , 0.83153445, 0.95408547, 0.9573014 ], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.92696893, 0.8891992 , 0.96955496, 0.9755679 ], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.9428026 , 0.9197215 , 0.9831834 , 0.98539513], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.9633507 , 0.95016295, 0.9894407 , 0.9935705 ], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.97056025, 0.9585853 , 0.98785734, 0.98283255], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.98054105, 0.9637546 , 0.98981184, 0.98581856], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.98338866, 0.97486025, 0.99451834, 0.9944182 ], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.9914853 , 0.98925734, 1.        , 0.99785495], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.9838862, 0.9846153, 0.9984325, 0.996139 ], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.9943235 , 0.98692805, 0.9980415 , 0.9944182 ], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.98912525, 0.9794007 , 0.9921691 , 0.9969995 ], dtype=float32)>], 'loss': [0.648449182510376, 0.35408249497413635, 0.24040883779525757, 0.1632496565580368, 0.10144826769828796, 0.06951425969600677, 0.06930327415466309, 0.06482499092817307, 0.03860027715563774, 0.020728163421154022, 0.026183517649769783, 0.023869041353464127, 0.03829554095864296], 'precision': [0.8055254817008972, 0.8802247047424316, 0.9176079630851746, 0.9464403986930847, 0.9615384340286255, 0.9758930802345276, 0.976754367351532, 0.9811609983444214, 0.9873002171516418, 0.9951828122138977, 0.9916794300079346, 0.9938703775405884, 0.9899299740791321], 'recall': [0.6509082913398743, 0.8572992086410522, 0.906762957572937, 0.9398117661476135, 0.9575399160385132, 0.9746115207672119, 0.9748303890228271, 0.9803020358085632, 0.9868680238723755, 0.9947472214698792, 0.9912453293800354, 0.993652880191803, 0.9897133111953735], 'val_AUC': [0.9638087749481201, 0.9852002263069153, 0.9853382110595703, 0.9892345070838928, 0.9892948865890503, 0.9793865084648132, 0.9798906445503235, 0.9895288944244385, 0.9827433824539185, 0.9850575923919678, 0.9876554608345032, 0.9871095418930054, 0.988479495048523], 'val_accuracy': [0.8353765606880188, 0.8931698799133301, 0.9106830358505249, 0.9246935248374939, 0.9316987991333008, 0.9159369468688965, 0.8949211835861206, 0.9369527101516724, 0.9229422211647034, 0.9457092881202698, 0.9316987991333008, 0.9422066807746887, 0.9369527101516724], 'val_categorical_crossentropy': [0.4532966613769531, 0.28867989778518677, 0.2740825414657593, 0.22319693863391876, 0.21865664422512054, 0.3838639557361603, 0.34361976385116577, 0.21176296472549438, 0.2804029583930969, 0.32258692383766174, 0.269831120967865, 0.26809659600257874, 0.24489308893680573], 'val_f1_score': [<tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.8164793 , 0.719178  , 0.9329072 , 0.86666656], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.9097744 , 0.78195477, 0.94374996, 0.92413783], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.8879667, 0.8421052, 0.9620253, 0.9466192], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.9037037 , 0.86120987, 0.96393436, 0.9650349 ], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.9070632 , 0.8698885 , 0.96507937, 0.97577846], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.8971192 , 0.84789634, 0.97452223, 0.94202894], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.85614026, 0.79365075, 0.9496855 , 0.9616724 ], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.92366403, 0.8791208 , 0.96855336, 0.96885806], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.88095236, 0.8501742 , 0.9714285 , 0.9791666 ], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.92307687, 0.89679706, 0.97452223, 0.98257834], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.9034748 , 0.87142855, 0.9714285 , 0.97222215], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.9207547 , 0.88644683, 0.9714285 , 0.9826989 ], dtype=float32)>, <tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.9172932 , 0.88970584, 0.9748427 , 0.9580419 ], dtype=float32)>], 'val_loss': [0.4532966613769531, 0.28867989778518677, 0.2740825414657593, 0.22319693863391876, 0.21865664422512054, 0.3838639557361603, 0.34361976385116577, 0.21176296472549438, 0.2804029583930969, 0.32258692383766174, 0.269831120967865, 0.26809659600257874, 0.24489308893680573], 'val_precision': [0.8485401272773743, 0.8989169597625732, 0.9153439402580261, 0.9261862635612488, 0.9347442388534546, 0.9190140962600708, 0.895575225353241, 0.9401408433914185, 0.9260563254356384, 0.9473684430122375, 0.9316987991333008, 0.9422066807746887, 0.9384886026382446], 'val_recall': [0.8143607974052429, 0.8721541166305542, 0.9089316725730896, 0.9229422211647034, 0.928196132183075, 0.914185643196106, 0.8861646056175232, 0.9352014064788818, 0.9211909174919128, 0.9457092881202698, 0.9316987991333008, 0.9422066807746887, 0.9352014064788818]}"